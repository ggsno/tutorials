{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\nico_tutorials\\\\React\\\\react-hook101\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useClick = onClick => {\n  _s();\n\n  const element = useRef();\n  useEffect(() => {\n    var _element$current;\n\n    (_element$current = element.current) === null || _element$current === void 0 ? void 0 : _element$current.addEventListener(\"click\", onClick);\n    return () => {\n      var _element$current2;\n\n      return (_element$current2 = element.current) === null || _element$current2 === void 0 ? void 0 : _element$current2.removeEventListener(\"click\", onClick);\n    };\n  }, []);\n  return element;\n};\n\n_s(useClick, \"SpBhasJPVJrZGxeF9Xbi1q4ov4I=\");\n\nfunction App() {\n  setTimeout(() => console.log(\"gi\"), 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/vscode/nico_tutorials/React/react-hook101/src/App.js"],"names":["useEffect","useRef","useClick","onClick","element","current","addEventListener","removeEventListener","App","setTimeout","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;;AAGA,MAAMC,QAAQ,GAAIC,OAAD,IAAa;AAAA;;AAC5B,QAAMC,OAAO,GAAGH,MAAM,EAAtB;AACAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,wBAAAI,OAAO,CAACC,OAAR,sEAAiBC,gBAAjB,CAAkC,OAAlC,EAA2CH,OAA3C;AACA,WAAO;AAAA;;AAAA,kCAAMC,OAAO,CAACC,OAAd,sDAAM,kBAAiBE,mBAAjB,CAAqC,OAArC,EAA8CJ,OAA9C,CAAN;AAAA,KAAP;AACD,GAHQ,EAGP,EAHO,CAAT;AAIA,SAAOC,OAAP;AACD,CAPD;;GAAMF,Q;;AASN,SAASM,GAAT,GAAe;AACbC,EAAAA,UAAU,CAAC,MAAIC,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAL,EAAuB,IAAvB,CAAV;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQH,G;AAKT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\n\n\nconst useClick = (onClick) => {\n  const element = useRef();\n  useEffect(() => {\n    element.current?.addEventListener(\"click\", onClick);\n    return () => element.current?.removeEventListener(\"click\", onClick)\n  },[]);\n  return element;\n}\n\nfunction App() {\n  setTimeout(()=>console.log(\"gi\"),1000);\n  return <div>hi</div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}